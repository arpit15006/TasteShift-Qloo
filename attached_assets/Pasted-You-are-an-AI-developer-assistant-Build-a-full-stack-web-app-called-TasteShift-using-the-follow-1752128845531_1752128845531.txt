You are an AI developer assistant. Build a full-stack web app called **TasteShift** using the following stack:

**Tech Stack:**
- Frontend: React (or Next.js on Replit)
- Backend: Python (Flask) or Node.js (Express) – use Flask if possible
- APIs used:
  - [Qloo Taste API](https://developer.qloo.com) – for generating taste-based cultural intelligence
  - [Google Gemini Pro API] – for generating creative content like brand taglines, summaries, and mockups
- Database: Supabase (for storing user inputs, generated personas, and history)
- Vector Search (Optional): Use Pinecone or a mock module for matching similar personas
- Hosting: Should run entirely on Replit with frontend + backend + API calls functioning in one environment

**App Features to Build:**
1. A user selects a region + target demographic (e.g., “Gen Z in Tokyo”).
2. Backend calls Qloo API to get dominant cross-domain taste patterns (music, food, film, fashion, etc.).
3. LLM (Gemini API) generates a **"Future Persona"** – a descriptive profile of that cultural audience.
4. User pastes their campaign brief. LLM returns:
   - Taste Shock Score: how culturally aligned or disruptive the campaign is
   - 3 Creative Suggestions: taglines, ad ideas, mock visuals (use image placeholder or DALL·E API if time)
5. Save and retrieve personas via Supabase.

**Requirements:**
- Build a clean, simple UI using React with two main inputs:
   - Select Demographic
   - Paste Campaign Brief
- Display the following:
   - Generated Persona (text)
   - Taste Shock Score (0–100)
   - Auto-Generated Creative Suggestions
- Backend Flask server should manage:
   - Calling Qloo and Gemini APIs
   - Supabase integration
   - Routes for persona generation and campaign analysis
- Store all API keys in `.env` and use Replit secrets for safety
- Ensure the entire app runs on Replit in a single environment with proper CORS handling and working demo link

**Bonus:**
- Add a README.md with setup, Qloo/Gemini API usage, and example outputs
- Add a deployable URL with working form + results